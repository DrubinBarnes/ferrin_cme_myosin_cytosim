#+TITLE: ferrin_cme_myosin_cytosim

Code associated with Ferrin et al. 2025 manuscript /Force-insensitive myosin-I
enhances endocytosis robustness through actin network-scale collective
ratcheting/

[[https://www.biorxiv.org/content/10.1101/2025.04.04.647278v1][bioRxiv preprint avialable here]]

* Running simulations
The source code for installing Cytosim is provided here:
- [[file:cytosim_dblab/3d/][3D version]] (for endocytosis simulations)
- [[file:cytosim_dblab/2d/][2D version]] (for gliding assay simulations)

Scripts for automatically generating systematic parameter sweeps and running
simulations on a high-performance computing cluster are provided in the
directory [[file:cytosim_dblab/]].

Example of submitting a batch job to the cluster, starting from the single
configuration file [[file:main_simulations/simulations/6.12.0.cym.tpl]]:

#+begin_src bash
main_simulations/simulations$ bash cytosim_dblab/configGenerator.sh 1 6.12.0
6.12.00000.cym
6.12.00001.cym
6.12.00002.cym
6.12.00003.cym
made and moved 6.12.0
Do you want to send it up to the server? [Y/N] Y
sending up to server
(ferrinm@dtn.brc.berkeley.edu) Password:
6.12.00000.cym                                         100%   21KB   2.1MB/s   00:00
6.12.00001.cym                                         100%   21KB   5.2MB/s   00:00
6.12.00002.cym                                         100%   21KB   5.5MB/s   00:00
6.12.00003.cym                                         100%   21KB   5.2MB/s   00:00
Do you want to visit the server? [Y/N] Y
visiting server
(ferrinm@brc.berkeley.edu) Password:
Last login: Sat Jul  8 11:40:21 2023 from 10.142.247.92
[ferrinm@ln000 ~]$ cd /global/scratch/users/ferrinm/simulations
[ferrinm@ln000 simulations]$ ls
6.11.1	       6.11.8	      6.12.4	    cytosimParallelBash.sh
6.11.1_output  6.11.8_output  6.12.5	    cytosimParallelBash_2d.sh
6.11.2	       6.11.9	      6.12.6	    folder_ID.sh
6.11.2_output  6.11.9_output  6.12.7	    iterateNumbers.sh
6.11.3	       6.12.0	      6.12.8	    module_load.sh
6.11.3_output  6.12.1	      6.12.9	    nbRepeats.sh
6.11.4	       6.12.10	      6.9.5	    runParallelBash.sh
6.11.4_output  6.12.11	      6.9.5_output  runParallelBash_2d.sh
6.11.6	       6.12.12	      6.9.6	    savioParallelCym.sh
6.11.6_output  6.12.1_output  6.9.6_output  savioParallelCym_2d.sh
6.11.7	       6.12.2	      8.1.1
6.11.7_output  6.12.3	      8.1.1_output
[ferrinm@ln000 simulations]$ bash savioParallelCym.sh 6.12.0 12
6.12.0_output
2 arguments
12 repeats
I found 4 cym files
48 total simulations to run
2 nodes used
24 tasks per node
Submitted batch job 14881228
#+end_src
* Analyzing simulations

The important functions for parsing simulation outputs and analyzing results are
in the file [[file:cytosim_analysis/cytosim_analysis_functions.py]]. Analysis is
actually performed in notebooks in this repository, where these functions are
called and then results are plotted. Figures for all main figures and most
supplemental figures were generated in [[file:main_simulations/]], the remaining
supplemental figures were generated in [[file:supplemental_simulations/]].

These notebooks cannot be run from this repository as-is, because the simulation
outputs require too much disk space and thus are not included. These outputs may
be provided upon request.

NOTE: Python-based analyses were originally written and executed in emacs org
documents, then converted to jupyter notebooks for sharing. These conversions
have their quirks so two converted versions for the relevant notebooks exist:
- Files ending in ~orgparse.ipynb~: converted using the =orgparse= library.
  These contain code that can be directly run in an interactive session, though
  much of the original formatting is lost.
- Files ending in ~pandoc.ipynb~: converted using =pandoc=. These are nicer to
  look at, but are ultimately a single =markdown= cell and thus code cannot be
  run like a typical jupyter notebook.

There are also =org= and =markdown= files directly exported from each analysis document.
